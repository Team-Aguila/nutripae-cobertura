"""Make beneficiary fields optional

Revision ID: 28ba62128084
Revises: 2ce470eaee22
Create Date: 2025-06-11 19:54:35.121759

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '28ba62128084'
down_revision: Union[str, None] = '2ce470eaee22'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_coveragePerMonth_date_end'), table_name='coveragePerMonth')
    op.drop_index(op.f('ix_coveragePerMonth_date_start'), table_name='coveragePerMonth')
    op.drop_table('coveragePerMonth')
    op.alter_column('beneficiary', 'second_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('beneficiary', 'second_surname',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('beneficiary', 'victim_conflict',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('beneficiary', 'attendant_number',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('beneficiary', 'attendant_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('beneficiary', 'attendant_phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('beneficiary', 'attendant_relationship',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('beneficiary', 'attendant_relationship',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('beneficiary', 'attendant_phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('beneficiary', 'attendant_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('beneficiary', 'attendant_number',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('beneficiary', 'victim_conflict',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('beneficiary', 'second_surname',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('beneficiary', 'second_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.create_table('coveragePerMonth',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('date_start', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('date_end', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('campus_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['campus_id'], ['campus.id'], name=op.f('coveragePerMonth_campus_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('coveragePerMonth_pkey'))
    )
    op.create_index(op.f('ix_coveragePerMonth_date_start'), 'coveragePerMonth', ['date_start'], unique=False)
    op.create_index(op.f('ix_coveragePerMonth_date_end'), 'coveragePerMonth', ['date_end'], unique=False)
    # ### end Alembic commands ###
