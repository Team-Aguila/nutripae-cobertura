"""add parametric tables

Revision ID: 2ce470eaee22
Revises: 
Create Date: 2025-06-10 23:17:44.811364

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '2ce470eaee22'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('benefit_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_benefit_type_name'), 'benefit_type', ['name'], unique=True)
    op.create_table('department',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dane_code', sa.String(length=13), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_department_dane_code'), 'department', ['dane_code'], unique=True)
    op.create_index(op.f('ix_department_name'), 'department', ['name'], unique=True)
    op.create_table('disability_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_disability_type_name'), 'disability_type', ['name'], unique=True)
    op.create_table('document_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_type_name'), 'document_type', ['name'], unique=True)
    op.create_table('etnic_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_etnic_group_name'), 'etnic_group', ['name'], unique=True)
    op.create_table('gender',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gender_name'), 'gender', ['name'], unique=True)
    op.create_table('grade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_grade_name'), 'grade', ['name'], unique=True)
    op.create_table('beneficiary',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('document_type_id', sa.Integer(), nullable=False),
    sa.Column('number_document', sa.String(length=20), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('second_name', sa.String(length=50), nullable=False),
    sa.Column('first_surname', sa.String(length=50), nullable=False),
    sa.Column('second_surname', sa.String(length=50), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('gender_id', sa.Integer(), nullable=False),
    sa.Column('grade_id', sa.Integer(), nullable=False),
    sa.Column('etnic_group_id', sa.Integer(), nullable=True),
    sa.Column('victim_conflict', sa.Boolean(), nullable=False),
    sa.Column('disability_type_id', sa.Integer(), nullable=True),
    sa.Column('attendant_number', sa.Integer(), nullable=False),
    sa.Column('attendant_name', sa.String(length=50), nullable=False),
    sa.Column('attendant_phone', sa.String(length=20), nullable=False),
    sa.Column('attendant_relationship', sa.String(length=50), nullable=False),
    sa.Column('retirement_date', sa.Date(), nullable=True),
    sa.Column('retirement_reason', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['disability_type_id'], ['disability_type.id'], ),
    sa.ForeignKeyConstraint(['document_type_id'], ['document_type.id'], ),
    sa.ForeignKeyConstraint(['etnic_group_id'], ['etnic_group.id'], ),
    sa.ForeignKeyConstraint(['gender_id'], ['gender.id'], ),
    sa.ForeignKeyConstraint(['grade_id'], ['grade.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_beneficiary_birth_date'), 'beneficiary', ['birth_date'], unique=False)
    op.create_index(op.f('ix_beneficiary_first_name'), 'beneficiary', ['first_name'], unique=False)
    op.create_index(op.f('ix_beneficiary_first_surname'), 'beneficiary', ['first_surname'], unique=False)
    op.create_index(op.f('ix_beneficiary_number_document'), 'beneficiary', ['number_document'], unique=True)
    op.create_index(op.f('ix_beneficiary_year'), 'beneficiary', ['year'], unique=False)
    op.create_table('town',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dane_code', sa.String(length=13), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_town_dane_code'), 'town', ['dane_code'], unique=True)
    op.create_index(op.f('ix_town_name'), 'town', ['name'], unique=True)
    op.create_table('institution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('dane_code', sa.String(length=13), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('town_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['town_id'], ['town.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_institution_dane_code'), 'institution', ['dane_code'], unique=True)
    op.create_index(op.f('ix_institution_name'), 'institution', ['name'], unique=True)
    op.create_table('campus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('dane_code', sa.String(length=13), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_campus_dane_code'), 'campus', ['dane_code'], unique=True)
    op.create_index(op.f('ix_campus_name'), 'campus', ['name'], unique=True)
    op.create_table('coverage',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('benefit_type_id', sa.Integer(), nullable=False),
    sa.Column('campus_id', sa.Integer(), nullable=False),
    sa.Column('beneficiary_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['beneficiary_id'], ['beneficiary.id'], ),
    sa.ForeignKeyConstraint(['benefit_type_id'], ['benefit_type.id'], ),
    sa.ForeignKeyConstraint(['campus_id'], ['campus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coveragePerMonth',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('date_start', sa.Date(), nullable=False),
    sa.Column('date_end', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('campus_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['campus_id'], ['campus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_coveragePerMonth_date_end'), 'coveragePerMonth', ['date_end'], unique=False)
    op.create_index(op.f('ix_coveragePerMonth_date_start'), 'coveragePerMonth', ['date_start'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_coveragePerMonth_date_start'), table_name='coveragePerMonth')
    op.drop_index(op.f('ix_coveragePerMonth_date_end'), table_name='coveragePerMonth')
    op.drop_table('coveragePerMonth')
    op.drop_table('coverage')
    op.drop_index(op.f('ix_campus_name'), table_name='campus')
    op.drop_index(op.f('ix_campus_dane_code'), table_name='campus')
    op.drop_table('campus')
    op.drop_index(op.f('ix_institution_name'), table_name='institution')
    op.drop_index(op.f('ix_institution_dane_code'), table_name='institution')
    op.drop_table('institution')
    op.drop_index(op.f('ix_town_name'), table_name='town')
    op.drop_index(op.f('ix_town_dane_code'), table_name='town')
    op.drop_table('town')
    op.drop_index(op.f('ix_beneficiary_year'), table_name='beneficiary')
    op.drop_index(op.f('ix_beneficiary_number_document'), table_name='beneficiary')
    op.drop_index(op.f('ix_beneficiary_first_surname'), table_name='beneficiary')
    op.drop_index(op.f('ix_beneficiary_first_name'), table_name='beneficiary')
    op.drop_index(op.f('ix_beneficiary_birth_date'), table_name='beneficiary')
    op.drop_table('beneficiary')
    op.drop_index(op.f('ix_grade_name'), table_name='grade')
    op.drop_table('grade')
    op.drop_index(op.f('ix_gender_name'), table_name='gender')
    op.drop_table('gender')
    op.drop_index(op.f('ix_etnic_group_name'), table_name='etnic_group')
    op.drop_table('etnic_group')
    op.drop_index(op.f('ix_document_type_name'), table_name='document_type')
    op.drop_table('document_type')
    op.drop_index(op.f('ix_disability_type_name'), table_name='disability_type')
    op.drop_table('disability_type')
    op.drop_index(op.f('ix_department_name'), table_name='department')
    op.drop_index(op.f('ix_department_dane_code'), table_name='department')
    op.drop_table('department')
    op.drop_index(op.f('ix_benefit_type_name'), table_name='benefit_type')
    op.drop_table('benefit_type')
    # ### end Alembic commands ###
